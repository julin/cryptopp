cmake_minimum_required(VERSION 2.8 FATAL_ERROR)

project (cryptopp)

set(CRYPTOPP_SRC
  cryptlib.cpp
  cpu.cpp
  integer.cpp
  3way.cpp
  adler32.cpp
  algebra.cpp
  algparam.cpp
  arc4.cpp
  aria.cpp
  aria-simd.cpp
  ariatab.cpp
  asn.cpp
  authenc.cpp
  base32.cpp
  base64.cpp
  basecode.cpp
  bfinit.cpp
  blake2.cpp
  blake2-simd.cpp
  blowfish.cpp
  blumshub.cpp
  camellia.cpp
  cast.cpp
  casts.cpp
  cbcmac.cpp
  ccm.cpp
  chacha.cpp
  channels.cpp
  cmac.cpp
  crc.cpp
  crc-simd.cpp
  default.cpp
  des.cpp
  dessp.cpp
  dh.cpp
  dh2.cpp
  dll.cpp
  dsa.cpp
  eax.cpp
  ec2n.cpp
  eccrypto.cpp
  ecp.cpp
  elgamal.cpp
  emsa2.cpp
  eprecomp.cpp
  esign.cpp
  files.cpp
  filters.cpp
  fips140.cpp
  fipstest.cpp
  gcm.cpp
  gcm-simd.cpp
  gf256.cpp
  gf2_32.cpp
  gf2n.cpp
  gfpcrypt.cpp
  gost.cpp
  gzip.cpp
  hex.cpp
  hmac.cpp
  hrtimer.cpp
  ida.cpp
  idea.cpp
  iterhash.cpp
  kalyna.cpp
  kalynatab.cpp
  keccak.cpp
  luc.cpp
  mars.cpp
  marss.cpp
  md2.cpp
  md4.cpp
  md5.cpp
  misc.cpp
  modes.cpp
  mqueue.cpp
  mqv.cpp
  nbtheory.cpp
  network.cpp
  oaep.cpp
  osrng.cpp
  padlkrng.cpp
  panama.cpp
  pch.cpp
  pkcspad.cpp
  poly1305.cpp
  polynomi.cpp
  pssr.cpp
  pubkey.cpp
  queue.cpp
  rabin.cpp
  randpool.cpp
  rc2.cpp
  rc5.cpp
  rc6.cpp
  rdrand.cpp
  rdtables.cpp
  rijndael.cpp
  rijndael-simd.cpp
  ripemd.cpp
  rng.cpp
  rsa.cpp
  rw.cpp
  safer.cpp
  salsa.cpp
  seal.cpp
  seed.cpp
  serpent.cpp
  sha.cpp
  sha-simd.cpp
  sha3.cpp
  shacal2.cpp
  shacal2-simd.cpp
  shark.cpp
  sharkbox.cpp
  simon-simd.cpp
  simon.cpp
  simple.cpp
  skipjack.cpp
  sm3.cpp
  sm4.cpp
  socketft.cpp
  sosemanuk.cpp
  speck.cpp
  speck-simd.cpp
  square.cpp
  squaretb.cpp
  sse-simd.cpp
  strciphr.cpp
  tea.cpp
  tftables.cpp
  threefish.cpp
  tiger.cpp
  tigertab.cpp
  trdlocal.cpp
  ttmac.cpp
  twofish.cpp
  vmac.cpp
  wait.cpp
  wake.cpp
  whrlpool.cpp
  winpipes.cpp
  xtr.cpp
  xtrcrypt.cpp
  zdeflate.cpp
  zinflate.cpp
  zlib.cpp
)

set(CRYPTOPP_INC
    3way.h
    adler32.h
    adv-simd.h
    aes.h
    algebra.h
    algparam.h
    arc4.h
    aria.h
    argnames.h
    asn.h
    authenc.h
    base32.h
    base64.h
    basecode.h
    blake2.h
    blowfish.h
    blumshub.h
    camellia.h
    cast.h
    cbcmac.h
    ccm.h
    chacha.h
    channels.h
    cmac.h
    config.h
    cpu.h
    crc.h
    cryptlib.h
    default.h
    des.h
    dh.h
    dh2.h
    dmac.h
    drbg.h
    dsa.h
    eax.h
    ec2n.h
    eccrypto.h
    ecp.h
    ecpoint.h
    elgamal.h
    emsa2.h
    eprecomp.h
    esign.h
    files.h
    filters.h
    fips140.h
    fhmqv.h
    fltrimpl.h
    gcm.h
    gf256.h
    gf2_32.h
    gf2n.h
    gfpcrypt.h
    gost.h
    gzip.h
    hex.h
    hkdf.h
    hmac.h
    hmqv.h
    hrtimer.h
    ida.h
    idea.h
    integer.h
    iterhash.h
    kalyna.h
    keccak.h
    lubyrack.h
    luc.h
    mars.h
    md2.h
    md4.h
    md5.h
    mdc.h
    misc.h
    modarith.h
    modes.h
    modexppc.h
    mqueue.h
    mqv.h
    nbtheory.h
    network.h
    nr.h
    oaep.h
    oids.h
    osrng.h
    padlkrng.h
    panama.h
    pch.h
    pkcspad.h
    poly1305.h
    polynomi.h
    pssr.h
    pubkey.h
    pwdbased.h
    queue.h
    rabin.h
    randpool.h
    rc2.h
    rc5.h
    rc6.h
    rdrand.h
    rijndael.h
    ripemd.h
    rng.h
    rsa.h
    rw.h
    safer.h
    salsa.h
    seal.h
    secblock.h
    seckey.h
    seed.h
    serpent.h
    sha.h
    sha3.h
    shacal2.h
    shark.h
    simple.h
    simon.h
    siphash.h
    skipjack.h
    sm3.h
    sm4.h
    smartptr.h
    socketft.h
    sosemanuk.h
    speck.h
    square.h
    stdcpp.h
    strciphr.h
    tea.h
    threefish.h
    tiger.h
    trap.h
    trdlocal.h
    trunhash.h
    ttmac.h
    twofish.h
    vmac.h
    wait.h
    wake.h
    whrlpool.h
    winpipes.h
    words.h
    xtr.h
    xtrcrypt.h
    zdeflate.h
    zinflate.h
    zlib.h
)

add_library(cryptopp STATIC ${CRYPTOPP_SRC} ${CRYPTOPP_INC})

if(WINDOWS)
  add_definitions(-D_USE_MATH_DEFINES -DNOMAIN -DNO_TIMER -DNOMINMAX -DMESQUITE_STATIC_LIB -DHAVE_CLOCK -D_CRT_SECURE_NO_DEPRECATE -D_SCL_SECURE_NO_DEPRECATE)
  set_target_properties(cryptopp PROPERTIES DEBUG_POSTFIX d)
  set_target_properties(cryptopp PROPERTIES LINK_FLAGS_RELEASE "/nodefaultlib:LIBCMT")
  foreach(VAR
        CMAKE_CXX_FLAGS CMAKE_CXX_FLAGS_DEBUG CMAKE_CXX_FLAGS_RELEASE
        CMAKE_CXX_FLAGS_MINSIZEREL CMAKE_CXX_FLAGS_RELWITHDEBINFO
        CMAKE_C_FLAGS CMAKE_C_FLAGS_DEBUG CMAKE_C_FLAGS_RELEASE
        CMAKE_C_FLAGS_MINSIZEREL CMAKE_C_FLAGS_RELWITHDEBINFO)
    if(${VAR} MATCHES "/RTC1")
        string(REGEX REPLACE "/RTC1" "" ${VAR} "${${VAR}}")
    endif()
  endforeach()  
elseif(UNIX)
  add_definitions(-DLINUX -DHAVE_CLOCK -DNOMAIN)
  set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -fPIC")
endif()

if(MSVC)
  set_target_properties(cryptopp PROPERTIES COMPILE_FLAGS "/bigobj")
elseif(LINUX)
  set_target_properties(cryptopp PROPERTIES COMPILE_FLAGS "-std=c++11")
endif()


